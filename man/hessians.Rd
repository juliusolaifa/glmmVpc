% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vpc_ci.R
\name{hessians}
\alias{hessians}
\title{Compute the Hessian for a VPC Model}
\usage{
hessians(vpcObj, method = "numerical")
}
\arguments{
\item{vpcObj}{A list containing the fitted model and its data context.
It must include:
\describe{
\item{\code{modObj}}{A sub‑list with elements
\code{beta} (numeric vector of fixed effects),
\code{Sigma} (random‑effect covariance matrix),
\code{phi} (dispersion parameter),
\code{family} (character; currently \code{"negative_binomial"} or
\code{"tweedie"}), and—when \code{family == "tweedie"}—\code{power}.}
\item{\code{x}}{Design matrix or covariate vector used by the model.}
}}

\item{method}{Character string indicating the differentiation method.
Currently only \code{"numerical"} is available.  Default is
\code{"numerical"}.}
}
\value{
A square numeric matrix: the Hessian of the VPC evaluated at the
supplied parameter values.  Row and column names correspond to
\code{c(beta, phi, vech(Sigma))}.
}
\description{
Extracts the model parameters stored in \code{vpcObj} and passes them to
the internal helper \code{hess_vpc_engine()} to obtain the numerical (or
analytic, when implemented) Hessian of the variance–partitioning
coefficient (VPC) with respect to the full parameter vector
\eqn{\Theta = (\beta, \phi, \mathrm{vech}(\Sigma))}.
}
\details{
For Tweedie models, the power parameter \code{power} must be supplied
in \code{modObj}; otherwise the function stops with an error.  All heavy
lifting is delegated to \code{hess_vpc_engine()}, which computes the Hessian
via \code{numDeriv::hessian()} unless future analytic routines are added.
}
\examples{
\dontrun{
  ## Suppose 'vpcObj' is a previously created VPC fit object
  H <- hessians(vpcObj, method = "numerical")
  print(H)
}

}
\seealso{
\code{\link{hess_vpc_engine}}
}

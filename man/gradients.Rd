% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vpc_ci.R
\name{gradients}
\alias{gradients}
\title{Compute Gradients for a VPC Model}
\usage{
gradients(vpcObj, method = "numerical")
}
\arguments{
\item{vpcObj}{A list object containing model and data information. It must include:
\describe{
\item{\code{modObj}}{A list with elements \code{beta} (the parameter vector), \code{Sigma}
(covariance matrix), \code{phi} (dispersion parameter), \code{family} (distribution family),
and optionally \code{power} (required when \code{family == "tweedie"}).}
\item{\code{x}}{Predictor variables or design matrix used in the model.}
}}

\item{method}{A character string specifying the gradient calculation method.
The default is \code{"numerical"}.}
}
\value{
The output of \code{gradient_vpc_engine}, which is the gradient evaluated for the provided
model parameters.
}
\description{
This function computes gradients for a given VPC model. It extracts essential
parameters from the model object included in \code{vpcObj} and then passes them to the
internal function \code{gradient_vpc_engine} for gradient computation.
}
\details{
The function checks if the distribution family is \code{"tweedie"}. In that case, it ensures that
the \code{power} parameter is provided in \code{modObj}. If \code{power} is \code{NULL}, the function stops
and raises an error.
}
\examples{
\dontrun{
  # Assuming you have a valid vpcObj, you can compute gradients as follows:
  result <- gradients(vpcObj, method = "numerical")
}

}
\seealso{
\code{\link{gradient_vpc_engine}}
}

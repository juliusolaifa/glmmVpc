% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vpc_ci.R
\name{gradient_vpc_engine}
\alias{gradient_vpc_engine}
\title{Compute Gradient for Variance Partition Coefficient (VPC) Engine}
\usage{
gradient_vpc_engine(beta, Sigma, phi, family, x = NULL, power = NULL, method)
}
\arguments{
\item{beta}{A numeric vector of coefficients for the mean function.}

\item{Sigma}{A numeric matrix representing the covariance structure.}

\item{phi}{A numeric value representing the dispersion parameter.}

\item{family}{A character string specifying the family of distributions.
Currently supported families are "negative_binomial" and "tweedie".}

\item{x}{A numeric vector or matrix of covariates. Default is \code{NULL}.}

\item{power}{A numeric value representing the power parameter for the Tweedie family.
Required if \code{family} is "tweedie". Default is \code{NULL}.}

\item{method}{A character string specifying the method to compute the gradient.
Supported methods are "symbolic" and "numerical".}
}
\value{
A numeric vector containing the gradient of the VPC with respect to the parameters.
}
\description{
This function computes the gradient of the Variance Partition Coefficient (VPC)
for different families of distributions, such as Negative Binomial and Tweedie.
The gradient can be computed either symbolically or numerically.
}
\examples{
# Example for Negative Binomial family
beta <- c(1, 2)
Sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 2)
phi <- 1.5
x <- 1
gradient_vpc_engine(beta, Sigma, phi, family = "negative_binomial", x=1,method = "symbolic")

# Example for Tweedie family
power <- 1.5
gradient_vpc_engine(beta, Sigma, phi, family = "tweedie", x=1, power = power, method = "numerical")

}
